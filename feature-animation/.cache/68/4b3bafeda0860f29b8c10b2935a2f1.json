{"id":"rMra","dependencies":[{"name":"/home/pranav/Project Maps/feature-animation/package.json","includedInParent":true,"mtime":1575650386924},{"name":"/home/pranav/Project Maps/feature-animation/node_modules/ol/package.json","includedInParent":true,"mtime":1575545100323},{"name":"../../math.js","loc":{"line":4,"column":51},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/geom/flat/closest.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/math.js"}],"generated":{"js":"var $rMra$exports={};function $rMra$var$assignClosest(r,a,t,e,$,s,o){var n,i=r[a],l=r[a+1],M=r[t]-i,u=r[t+1]-l;if(0===M&&0===u)n=a;else{var x=(($-i)*M+(s-l)*u)/(M*M+u*u);if(x>1)n=t;else{if(x>0){for(var p=0;p<e;++p)o[p]=$rMra$import$lerp(r[a+p],r[t+p],x);return void(o.length=e)}n=a}}for(p=0;p<e;++p)o[p]=r[n+p];o.length=e}function $rMra$export$maxSquaredDelta(r,a,t,e,$){var s=r[a],o=r[a+1];for(a+=e;a<t;a+=e){var n=r[a],i=r[a+1],l=$rMra$import$squaredDx(s,o,n,i);l>$&&($=l),s=n,o=i}return $}function $rMra$export$arrayMaxSquaredDelta(r,a,t,e,$){for(var s=0,o=t.length;s<o;++s){var n=t[s];$=$rMra$export$maxSquaredDelta(r,a,n,e,$),a=n}return $}function $rMra$export$multiArrayMaxSquaredDelta(r,a,t,e,$){for(var s=0,o=t.length;s<o;++s){var n=t[s];$=$rMra$export$arrayMaxSquaredDelta(r,a,n,e,$),a=n[n.length-1]}return $}function $rMra$export$assignClosestPoint(r,a,t,e,$,s,o,n,i,l,M){if(a==t)return l;var u,x;if(0===$){if((x=$rMra$import$squaredDx(o,n,r[a],r[a+1]))<l){for(u=0;u<e;++u)i[u]=r[a+u];return i.length=e,x}return l}for(var p=M||[NaN,NaN],f=a+e;f<t;)if($rMra$var$assignClosest(r,f-e,f,e,o,n,p),(x=$rMra$import$squaredDx(o,n,p[0],p[1]))<l){for(l=x,u=0;u<e;++u)i[u]=p[u];i.length=e,f+=e}else f+=e*Math.max((Math.sqrt(x)-Math.sqrt(l))/$|0,1);if(s&&($rMra$var$assignClosest(r,t-e,a,e,o,n,p),(x=$rMra$import$squaredDx(o,n,p[0],p[1]))<l)){for(l=x,u=0;u<e;++u)i[u]=p[u];i.length=e}return l}function $rMra$export$assignClosestArrayPoint(r,a,t,e,$,s,o,n,i,l,M){for(var u=M||[NaN,NaN],x=0,p=t.length;x<p;++x){var f=t[x];l=$rMra$export$assignClosestPoint(r,a,f,e,$,s,o,n,i,l,u),a=f}return l}function $rMra$export$assignClosestMultiArrayPoint(r,a,t,e,$,s,o,n,i,l,M){for(var u=M||[NaN,NaN],x=0,p=t.length;x<p;++x){var f=t[x];l=$rMra$export$assignClosestArrayPoint(r,a,f,e,$,s,o,n,i,l,u),a=f[f.length-1]}return l}$parcel$require(\"rMra\",\"../../math.js\"),$rMra$exports.maxSquaredDelta=$rMra$export$maxSquaredDelta,$rMra$exports.arrayMaxSquaredDelta=$rMra$export$arrayMaxSquaredDelta,$rMra$exports.multiArrayMaxSquaredDelta=$rMra$export$multiArrayMaxSquaredDelta,$rMra$exports.assignClosestPoint=$rMra$export$assignClosestPoint,$rMra$exports.assignClosestArrayPoint=$rMra$export$assignClosestArrayPoint,$rMra$exports.assignClosestMultiArrayPoint=$rMra$export$assignClosestMultiArrayPoint;"},"sourceMaps":null,"error":null,"hash":"3cfe3b468cf8a1c0ac8f4fa25edb70e1","cacheData":{"env":{},"imports":{"$rMra$import$lerp":["../../math.js","lerp"],"$rMra$import$squaredDx":["../../math.js","squaredDistance"]},"exports":{"maxSquaredDelta":"$rMra$export$maxSquaredDelta","arrayMaxSquaredDelta":"$rMra$export$arrayMaxSquaredDelta","multiArrayMaxSquaredDelta":"$rMra$export$multiArrayMaxSquaredDelta","assignClosestPoint":"$rMra$export$assignClosestPoint","assignClosestArrayPoint":"$rMra$export$assignClosestArrayPoint","assignClosestMultiArrayPoint":"$rMra$export$assignClosestMultiArrayPoint"},"wildcards":[],"sideEffects":false,"isES6Module":true}}