{"id":"q4ER","dependencies":[{"name":"/home/pranav/Project Maps/feature-animation/package.json","includedInParent":true,"mtime":1575650386924},{"name":"/home/pranav/Project Maps/feature-animation/node_modules/ol/package.json","includedInParent":true,"mtime":1575545100323},{"name":"./math.js","loc":{"line":10,"column":37},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/sphere.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/math.js"},{"name":"./geom/GeometryType.js","loc":{"line":11,"column":25},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/sphere.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/geom/GeometryType.js"}],"generated":{"js":"var $q4ER$exports={};$parcel$require(\"q4ER\",\"./math.js\"),$parcel$require(\"q4ER\",\"./geom/GeometryType.js\");var $q4ER$export$DEFAULT_RADIUS=6371008.8;function $q4ER$export$getDistance(e,t,r){var $=r||$q4ER$export$DEFAULT_RADIUS,a=$q4ER$import$toRadians(e[1]),o=$q4ER$import$toRadians(t[1]),n=(o-a)/2,E=$q4ER$import$toRadians(t[0]-e[0])/2,R=Math.sin(n)*Math.sin(n)+Math.sin(E)*Math.sin(E)*Math.cos(a)*Math.cos(o);return 2*$*Math.atan2(Math.sqrt(R),Math.sqrt(1-R))}function $q4ER$var$getLengthInternal(e,t){for(var r=0,$=0,a=e.length;$<a-1;++$)r+=$q4ER$export$getDistance(e[$],e[$+1],t);return r}function $q4ER$export$getLength(e,t){var r=t||{},$=r.radius||$q4ER$export$DEFAULT_RADIUS,a=r.projection||\"EPSG:3857\",o=e.getType();o!==$q4ER$import$GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(a,\"EPSG:4326\"));var n,E,R,p,s,i,q=0;switch(o){case $q4ER$import$GeometryType.POINT:case $q4ER$import$GeometryType.MULTI_POINT:break;case $q4ER$import$GeometryType.LINE_STRING:case $q4ER$import$GeometryType.LINEAR_RING:q=$q4ER$var$getLengthInternal(n=e.getCoordinates(),$);break;case $q4ER$import$GeometryType.MULTI_LINE_STRING:case $q4ER$import$GeometryType.POLYGON:for(R=0,p=(n=e.getCoordinates()).length;R<p;++R)q+=$q4ER$var$getLengthInternal(n[R],$);break;case $q4ER$import$GeometryType.MULTI_POLYGON:for(R=0,p=(n=e.getCoordinates()).length;R<p;++R)for(s=0,i=(E=n[R]).length;s<i;++s)q+=$q4ER$var$getLengthInternal(E[s],$);break;case $q4ER$import$GeometryType.GEOMETRY_COLLECTION:var m=e.getGeometries();for(R=0,p=m.length;R<p;++R)q+=$q4ER$export$getLength(m[R],t);break;default:throw new Error(\"Unsupported geometry type: \"+o)}return q}function $q4ER$var$getAreaInternal(e,t){for(var r=0,$=e.length,a=e[$-1][0],o=e[$-1][1],n=0;n<$;n++){var E=e[n][0],R=e[n][1];r+=$q4ER$import$toRadians(E-a)*(2+Math.sin($q4ER$import$toRadians(o))+Math.sin($q4ER$import$toRadians(R))),a=E,o=R}return r*t*t/2}function $q4ER$export$getArea(e,t){var r=t||{},$=r.radius||$q4ER$export$DEFAULT_RADIUS,a=r.projection||\"EPSG:3857\",o=e.getType();o!==$q4ER$import$GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(a,\"EPSG:4326\"));var n,E,R,p,s,i,q=0;switch(o){case $q4ER$import$GeometryType.POINT:case $q4ER$import$GeometryType.MULTI_POINT:case $q4ER$import$GeometryType.LINE_STRING:case $q4ER$import$GeometryType.MULTI_LINE_STRING:case $q4ER$import$GeometryType.LINEAR_RING:break;case $q4ER$import$GeometryType.POLYGON:for(n=e.getCoordinates(),q=Math.abs($q4ER$var$getAreaInternal(n[0],$)),R=1,p=n.length;R<p;++R)q-=Math.abs($q4ER$var$getAreaInternal(n[R],$));break;case $q4ER$import$GeometryType.MULTI_POLYGON:for(R=0,p=(n=e.getCoordinates()).length;R<p;++R)for(E=n[R],q+=Math.abs($q4ER$var$getAreaInternal(E[0],$)),s=1,i=E.length;s<i;++s)q-=Math.abs($q4ER$var$getAreaInternal(E[s],$));break;case $q4ER$import$GeometryType.GEOMETRY_COLLECTION:var m=e.getGeometries();for(R=0,p=m.length;R<p;++R)q+=$q4ER$export$getArea(m[R],t);break;default:throw new Error(\"Unsupported geometry type: \"+o)}return q}function $q4ER$export$offset(e,t,r,$){var a=$||$q4ER$export$DEFAULT_RADIUS,o=$q4ER$import$toRadians(e[1]),n=$q4ER$import$toRadians(e[0]),E=t/a,R=Math.asin(Math.sin(o)*Math.cos(E)+Math.cos(o)*Math.sin(E)*Math.cos(r)),p=n+Math.atan2(Math.sin(r)*Math.sin(E)*Math.cos(o),Math.cos(E)-Math.sin(o)*Math.sin(R));return[$q4ER$import$toDegrees(p),$q4ER$import$toDegrees(R)]}$q4ER$exports.DEFAULT_RADIUS=$q4ER$export$DEFAULT_RADIUS,$q4ER$exports.getDistance=$q4ER$export$getDistance,$q4ER$exports.getLength=$q4ER$export$getLength,$q4ER$exports.getArea=$q4ER$export$getArea,$q4ER$exports.offset=$q4ER$export$offset;"},"sourceMaps":null,"error":null,"hash":"8e59a27f848d1d8a085081fb5a27d642","cacheData":{"env":{},"imports":{"$q4ER$import$toRadians":["./math.js","toRadians"],"$q4ER$import$toDegrees":["./math.js","toDegrees"],"$q4ER$import$GeometryType":["./geom/GeometryType.js","default"]},"exports":{"DEFAULT_RADIUS":"$q4ER$export$DEFAULT_RADIUS","getDistance":"$q4ER$export$getDistance","getLength":"$q4ER$export$getLength","getArea":"$q4ER$export$getArea","offset":"$q4ER$export$offset"},"wildcards":[],"sideEffects":false,"isES6Module":true}}