{"id":"QDir","dependencies":[{"name":"/home/pranav/Project Maps/feature-animation/package.json","includedInParent":true,"mtime":1575650386924},{"name":"/home/pranav/Project Maps/feature-animation/node_modules/ol/package.json","includedInParent":true,"mtime":1575545100323},{"name":"./asserts.js","loc":{"line":4,"column":23},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/extent.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/asserts.js"},{"name":"./extent/Corner.js","loc":{"line":5,"column":19},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/extent.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/extent/Corner.js"},{"name":"./extent/Relationship.js","loc":{"line":6,"column":25},"parent":"/home/pranav/Project Maps/feature-animation/node_modules/ol/extent.js","resolved":"/home/pranav/Project Maps/feature-animation/node_modules/ol/extent/Relationship.js"}],"generated":{"js":"var $QDir$exports={};function $QDir$export$boundingExtent(r){for(var t=$QDir$export$createEmpty(),e=0,$=r.length;e<$;++e)$QDir$export$extendCoordinate(t,r[e]);return t}function $QDir$var$_boundingExtentXYs(r,t,e){return $QDir$export$createOrUpdate(Math.min.apply(null,r),Math.min.apply(null,t),Math.max.apply(null,r),Math.max.apply(null,t),e)}function $QDir$export$buffer(r,t,e){return e?(e[0]=r[0]-t,e[1]=r[1]-t,e[2]=r[2]+t,e[3]=r[3]+t,e):[r[0]-t,r[1]-t,r[2]+t,r[3]+t]}function $QDir$export$clone(r,t){return t?(t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t):r.slice()}function $QDir$export$closestSquaredDistanceXY(r,t,e){var $,i;return($=t<r[0]?r[0]-t:r[2]<t?t-r[2]:0)*$+(i=e<r[1]?r[1]-e:r[3]<e?e-r[3]:0)*i}function $QDir$export$containsCoordinate(r,t){return $QDir$export$containsXY(r,t[0],t[1])}function $QDir$export$containsExtent(r,t){return r[0]<=t[0]&&t[2]<=r[2]&&r[1]<=t[1]&&t[3]<=r[3]}function $QDir$export$containsXY(r,t,e){return r[0]<=t&&t<=r[2]&&r[1]<=e&&e<=r[3]}function $QDir$export$coordinateRelationship(r,t){var e=r[0],$=r[1],i=r[2],o=r[3],n=t[0],p=t[1],a=$QDir$import$Relationship.UNKNOWN;return n<e?a|=$QDir$import$Relationship.LEFT:n>i&&(a|=$QDir$import$Relationship.RIGHT),p<$?a|=$QDir$import$Relationship.BELOW:p>o&&(a|=$QDir$import$Relationship.ABOVE),a===$QDir$import$Relationship.UNKNOWN&&(a=$QDir$import$Relationship.INTERSECTING),a}function $QDir$export$createEmpty(){return[1/0,1/0,-1/0,-1/0]}function $QDir$export$createOrUpdate(r,t,e,$,i){return i?(i[0]=r,i[1]=t,i[2]=e,i[3]=$,i):[r,t,e,$]}function $QDir$export$createOrUpdateEmpty(r){return $QDir$export$createOrUpdate(1/0,1/0,-1/0,-1/0,r)}function $QDir$export$createOrUpdateFromCoordinate(r,t){var e=r[0],$=r[1];return $QDir$export$createOrUpdate(e,$,e,$,t)}function $QDir$export$createOrUpdateFromCoordinates(r,t){return $QDir$export$extendCoordinates($QDir$export$createOrUpdateEmpty(t),r)}function $QDir$export$createOrUpdateFromFlatCoordinates(r,t,e,$,i){return $QDir$export$extendFlatCoordinates($QDir$export$createOrUpdateEmpty(i),r,t,e,$)}function $QDir$export$createOrUpdateFromRings(r,t){return $QDir$export$extendRings($QDir$export$createOrUpdateEmpty(t),r)}function $QDir$export$equals(r,t){return r[0]==t[0]&&r[2]==t[2]&&r[1]==t[1]&&r[3]==t[3]}function $QDir$export$extend(r,t){return t[0]<r[0]&&(r[0]=t[0]),t[2]>r[2]&&(r[2]=t[2]),t[1]<r[1]&&(r[1]=t[1]),t[3]>r[3]&&(r[3]=t[3]),r}function $QDir$export$extendCoordinate(r,t){t[0]<r[0]&&(r[0]=t[0]),t[0]>r[2]&&(r[2]=t[0]),t[1]<r[1]&&(r[1]=t[1]),t[1]>r[3]&&(r[3]=t[1])}function $QDir$export$extendCoordinates(r,t){for(var e=0,$=t.length;e<$;++e)$QDir$export$extendCoordinate(r,t[e]);return r}function $QDir$export$extendFlatCoordinates(r,t,e,$,i){for(;e<$;e+=i)$QDir$export$extendXY(r,t[e],t[e+1]);return r}function $QDir$export$extendRings(r,t){for(var e=0,$=t.length;e<$;++e)$QDir$export$extendCoordinates(r,t[e]);return r}function $QDir$export$extendXY(r,t,e){r[0]=Math.min(r[0],t),r[1]=Math.min(r[1],e),r[2]=Math.max(r[2],t),r[3]=Math.max(r[3],e)}function $QDir$export$forEachCorner(r,t){var e;return(e=t($QDir$export$getBottomLeft(r)))?e:(e=t($QDir$export$getBottomRight(r)))?e:(e=t($QDir$export$getTopRight(r)))?e:(e=t($QDir$export$getTopLeft(r)))||!1}function $QDir$export$getArea(r){var t=0;return $QDir$export$isEmpty(r)||(t=$QDir$export$getWidth(r)*$QDir$export$getHeight(r)),t}function $QDir$export$getBottomLeft(r){return[r[0],r[1]]}function $QDir$export$getBottomRight(r){return[r[2],r[1]]}function $QDir$export$getCenter(r){return[(r[0]+r[2])/2,(r[1]+r[3])/2]}function $QDir$export$getCorner(r,t){var e;return t===$QDir$import$Corner.BOTTOM_LEFT?e=$QDir$export$getBottomLeft(r):t===$QDir$import$Corner.BOTTOM_RIGHT?e=$QDir$export$getBottomRight(r):t===$QDir$import$Corner.TOP_LEFT?e=$QDir$export$getTopLeft(r):t===$QDir$import$Corner.TOP_RIGHT?e=$QDir$export$getTopRight(r):$QDir$import$assert(!1,13),e}function $QDir$export$getEnlargedArea(r,t){var e=Math.min(r[0],t[0]),$=Math.min(r[1],t[1]);return(Math.max(r[2],t[2])-e)*(Math.max(r[3],t[3])-$)}function $QDir$export$getForViewAndSize(r,t,e,$,i){var o=t*$[0]/2,n=t*$[1]/2,p=Math.cos(e),a=Math.sin(e),x=o*p,D=o*a,Q=n*p,s=n*a,c=r[0],u=r[1],d=c-x+s,g=c-x-s,m=c+x-s,f=c+x+s,l=u-D-Q,h=u-D+Q,R=u+D+Q,E=u+D-Q;return $QDir$export$createOrUpdate(Math.min(d,g,m,f),Math.min(l,h,R,E),Math.max(d,g,m,f),Math.max(l,h,R,E),i)}function $QDir$export$getHeight(r){return r[3]-r[1]}function $QDir$export$getIntersectionArea(r,t){return $QDir$export$getArea($QDir$export$getIntersection(r,t))}function $QDir$export$getIntersection(r,t,e){var $=e||$QDir$export$createEmpty();return $QDir$export$intersects(r,t)?(r[0]>t[0]?$[0]=r[0]:$[0]=t[0],r[1]>t[1]?$[1]=r[1]:$[1]=t[1],r[2]<t[2]?$[2]=r[2]:$[2]=t[2],r[3]<t[3]?$[3]=r[3]:$[3]=t[3]):$QDir$export$createOrUpdateEmpty($),$}function $QDir$export$getMargin(r){return $QDir$export$getWidth(r)+$QDir$export$getHeight(r)}function $QDir$export$getSize(r){return[r[2]-r[0],r[3]-r[1]]}function $QDir$export$getTopLeft(r){return[r[0],r[3]]}function $QDir$export$getTopRight(r){return[r[2],r[3]]}function $QDir$export$getWidth(r){return r[2]-r[0]}function $QDir$export$intersects(r,t){return r[0]<=t[2]&&r[2]>=t[0]&&r[1]<=t[3]&&r[3]>=t[1]}function $QDir$export$isEmpty(r){return r[2]<r[0]||r[3]<r[1]}function $QDir$export$returnOrUpdate(r,t){return t?(t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t):r}function $QDir$export$scaleFromCenter(r,t){var e=(r[2]-r[0])/2*(t-1),$=(r[3]-r[1])/2*(t-1);r[0]-=e,r[2]+=e,r[1]-=$,r[3]+=$}function $QDir$export$intersectsSegment(r,t,e){var $=!1,i=$QDir$export$coordinateRelationship(r,t),o=$QDir$export$coordinateRelationship(r,e);if(i===$QDir$import$Relationship.INTERSECTING||o===$QDir$import$Relationship.INTERSECTING)$=!0;else{var n=r[0],p=r[1],a=r[2],x=r[3],D=t[0],Q=t[1],s=e[0],c=e[1],u=(c-Q)/(s-D),d=void 0,g=void 0;o&$QDir$import$Relationship.ABOVE&&!(i&$QDir$import$Relationship.ABOVE)&&($=(d=s-(c-x)/u)>=n&&d<=a),$||!(o&$QDir$import$Relationship.RIGHT)||i&$QDir$import$Relationship.RIGHT||($=(g=c-(s-a)*u)>=p&&g<=x),$||!(o&$QDir$import$Relationship.BELOW)||i&$QDir$import$Relationship.BELOW||($=(d=s-(c-p)/u)>=n&&d<=a),$||!(o&$QDir$import$Relationship.LEFT)||i&$QDir$import$Relationship.LEFT||($=(g=c-(s-n)*u)>=p&&g<=x)}return $}function $QDir$export$applyTransform(r,t,e){var $=[r[0],r[1],r[0],r[3],r[2],r[1],r[2],r[3]];return t($,$,2),$QDir$var$_boundingExtentXYs([$[0],$[2],$[4],$[6]],[$[1],$[3],$[5],$[7]],e)}$parcel$require(\"QDir\",\"./asserts.js\"),$parcel$require(\"QDir\",\"./extent/Corner.js\"),$parcel$require(\"QDir\",\"./extent/Relationship.js\"),$QDir$exports.boundingExtent=$QDir$export$boundingExtent,$QDir$exports.buffer=$QDir$export$buffer,$QDir$exports.clone=$QDir$export$clone,$QDir$exports.closestSquaredDistanceXY=$QDir$export$closestSquaredDistanceXY,$QDir$exports.containsCoordinate=$QDir$export$containsCoordinate,$QDir$exports.containsExtent=$QDir$export$containsExtent,$QDir$exports.containsXY=$QDir$export$containsXY,$QDir$exports.coordinateRelationship=$QDir$export$coordinateRelationship,$QDir$exports.createEmpty=$QDir$export$createEmpty,$QDir$exports.createOrUpdate=$QDir$export$createOrUpdate,$QDir$exports.createOrUpdateEmpty=$QDir$export$createOrUpdateEmpty,$QDir$exports.createOrUpdateFromCoordinate=$QDir$export$createOrUpdateFromCoordinate,$QDir$exports.createOrUpdateFromCoordinates=$QDir$export$createOrUpdateFromCoordinates,$QDir$exports.createOrUpdateFromFlatCoordinates=$QDir$export$createOrUpdateFromFlatCoordinates,$QDir$exports.createOrUpdateFromRings=$QDir$export$createOrUpdateFromRings,$QDir$exports.equals=$QDir$export$equals,$QDir$exports.extend=$QDir$export$extend,$QDir$exports.extendCoordinate=$QDir$export$extendCoordinate,$QDir$exports.extendCoordinates=$QDir$export$extendCoordinates,$QDir$exports.extendFlatCoordinates=$QDir$export$extendFlatCoordinates,$QDir$exports.extendRings=$QDir$export$extendRings,$QDir$exports.extendXY=$QDir$export$extendXY,$QDir$exports.forEachCorner=$QDir$export$forEachCorner,$QDir$exports.getArea=$QDir$export$getArea,$QDir$exports.getBottomLeft=$QDir$export$getBottomLeft,$QDir$exports.getBottomRight=$QDir$export$getBottomRight,$QDir$exports.getCenter=$QDir$export$getCenter,$QDir$exports.getCorner=$QDir$export$getCorner,$QDir$exports.getEnlargedArea=$QDir$export$getEnlargedArea,$QDir$exports.getForViewAndSize=$QDir$export$getForViewAndSize,$QDir$exports.getHeight=$QDir$export$getHeight,$QDir$exports.getIntersectionArea=$QDir$export$getIntersectionArea,$QDir$exports.getIntersection=$QDir$export$getIntersection,$QDir$exports.getMargin=$QDir$export$getMargin,$QDir$exports.getSize=$QDir$export$getSize,$QDir$exports.getTopLeft=$QDir$export$getTopLeft,$QDir$exports.getTopRight=$QDir$export$getTopRight,$QDir$exports.getWidth=$QDir$export$getWidth,$QDir$exports.intersects=$QDir$export$intersects,$QDir$exports.isEmpty=$QDir$export$isEmpty,$QDir$exports.returnOrUpdate=$QDir$export$returnOrUpdate,$QDir$exports.scaleFromCenter=$QDir$export$scaleFromCenter,$QDir$exports.intersectsSegment=$QDir$export$intersectsSegment,$QDir$exports.applyTransform=$QDir$export$applyTransform;"},"sourceMaps":null,"error":null,"hash":"199885422322ac7e98e8fa883111ba10","cacheData":{"env":{},"imports":{"$QDir$import$assert":["./asserts.js","assert"],"$QDir$import$Corner":["./extent/Corner.js","default"],"$QDir$import$Relationship":["./extent/Relationship.js","default"]},"exports":{"boundingExtent":"$QDir$export$boundingExtent","buffer":"$QDir$export$buffer","clone":"$QDir$export$clone","closestSquaredDistanceXY":"$QDir$export$closestSquaredDistanceXY","containsCoordinate":"$QDir$export$containsCoordinate","containsExtent":"$QDir$export$containsExtent","containsXY":"$QDir$export$containsXY","coordinateRelationship":"$QDir$export$coordinateRelationship","createEmpty":"$QDir$export$createEmpty","createOrUpdate":"$QDir$export$createOrUpdate","createOrUpdateEmpty":"$QDir$export$createOrUpdateEmpty","createOrUpdateFromCoordinate":"$QDir$export$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates":"$QDir$export$createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates":"$QDir$export$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings":"$QDir$export$createOrUpdateFromRings","equals":"$QDir$export$equals","extend":"$QDir$export$extend","extendCoordinate":"$QDir$export$extendCoordinate","extendCoordinates":"$QDir$export$extendCoordinates","extendFlatCoordinates":"$QDir$export$extendFlatCoordinates","extendRings":"$QDir$export$extendRings","extendXY":"$QDir$export$extendXY","forEachCorner":"$QDir$export$forEachCorner","getArea":"$QDir$export$getArea","getBottomLeft":"$QDir$export$getBottomLeft","getBottomRight":"$QDir$export$getBottomRight","getCenter":"$QDir$export$getCenter","getCorner":"$QDir$export$getCorner","getEnlargedArea":"$QDir$export$getEnlargedArea","getForViewAndSize":"$QDir$export$getForViewAndSize","getHeight":"$QDir$export$getHeight","getIntersectionArea":"$QDir$export$getIntersectionArea","getIntersection":"$QDir$export$getIntersection","getMargin":"$QDir$export$getMargin","getSize":"$QDir$export$getSize","getTopLeft":"$QDir$export$getTopLeft","getTopRight":"$QDir$export$getTopRight","getWidth":"$QDir$export$getWidth","intersects":"$QDir$export$intersects","isEmpty":"$QDir$export$isEmpty","returnOrUpdate":"$QDir$export$returnOrUpdate","scaleFromCenter":"$QDir$export$scaleFromCenter","intersectsSegment":"$QDir$export$intersectsSegment","applyTransform":"$QDir$export$applyTransform"},"wildcards":[],"sideEffects":false,"isES6Module":true}}